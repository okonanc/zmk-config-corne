#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap-german-rev3.h"

// Layer Definitions

#define COLEMAK 0
#define QWERTZ 1
#define G_CM 2
#define G_QY 3
#define LAYERS 4
#define NAV 5
#define MOUSE 6
#define MEDIA 7
#define NUM 8
#define SYM 9
#define FN 10
#define G_NUM 11
#define G_D_IV 12


// Behavior configuration
// Mod-tap

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

// Layer-tab

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

// Stick key

&sk {
    release-after-ms = <500>;
    quick-release;
};

// Keymap configuration (Colemak-DHm)

/ {
    keymap {
        compatible = "zmk,keymap";

        colemak {
            // ---------------------------------------------------------------------------------------------------------------------------------------
            // |        |   Q    |   W    |     F     |     P      |     B     | # |      J      |     L     |     U      |    Y   |   '    |        |
            // | LAYERS | A/LGUI | R/LALT |  S/LCTRL  |  T/LSHFT   |     G     | # |      M      |  N/LSHFT  |  E/LCTRL   | I/LALT | O/LGUI | LAYERS |
            // |        |   Z    | X/RALT |     C     |     D      |     V     | # |      K      |     H     |     ,      | ./RALT |   /    |        |
            //                            |  ESC/FN   | SPACE/NUM  |  TAB/SYM  | # | ENTER/MOUSE | BSPC/NAV  | DEL/MEDIA  |

            bindings = <  
&trans       &kp Q       &kp W      &kp F        &kp P          &kp B                &kp J        &kp L         &kp U          &kp Y            &kp SQT       &trans
&mo 4        &mt LGUI A  &mt LALT R &mt LCTRL S  &mt LSHFT T    &kp G                &kp M        &mt LSHFT N   &mt LCTRL E    &mt LALT I       &mt LGUI O    &mo 4
&trans       &kp Z  &mt RALT X      &kp C        &kp D          &kp V                &kp K        &kp H         &kp DE_COMMA   &mt RALT DE_DOT  &kp DE_FSLH   &trans
                                    &lt 10 ESC   &lt 8 SPACE    &lt 9 TAB            &lt 6 ENTER  &lt 5 BSPC    &lt 7 DEL
            >;
        };

        qwertz {
            // ----------------------------------------------------------------------------------------------------------------------------------------
            // |        |   Q    |   W    |     E     |     R      |     T     | # |      Z      |     U     |     I      |    O   |   P    |         |
            // | LAYERS | A/LGUI | S/LALT |  D/LCTRL  |  F/LSHFT   |     G     | # |      H      | J/LSHFT   |  K/LCTRL   | L/LALT | ;/LGUI | LAYERS  |
            // |        |   Y    | X/RALT |     C     |     V      |     B     | # |      N      |     M     |     ,      | ./RALT |   /    |         |
            //                            |  ESC/FN   | SPACE/NUM  |  TAB/SYM  | # | ENTER/MOUSE | BSPC/NAV  | DEL/MEDIA  |

            bindings = <
&trans  &kp Q       &kp W       &kp E        &kp R        &kp T               &kp DE_Z     &kp U         &kp I        &kp O            &kp P          &trans
&mo 4   &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G               &kp H        &mt LSHFT J   &mt LCTRL K  &mt LALT L       &mt LGUI SEMI  &mo 4
&trans  &kp DE_Y    &mt RALT X  &kp C        &kp V        &kp B               &kp N        &kp M         &kp DE_COMMA &mt RALT DE_DOT  &kp DE_FSLH    &trans
                                &lt 10 ESC   &lt 8 SPACE  &lt 9 TAB           &lt 6 ENTER  &lt 5 BSPC    &lt 7 DEL
            >;
        };

        g_cm {
            // -----------------------------------------------------------------------------------------------------------
            // |        |   Q   |   W   |   F   |   P   |    B    | # |   J   |   L    |   U   |   Y   |   '   |         |
            // | LAYERS |   A   |   R   |   S   |   T   |    G    | # |   M   |   N    |   E   |   I   |   O   | LAYERS  |
            // |        |   Z   |   X   |   C   |   D   |    V    | # |   K   |   H    |   ,   |   .   |   /   |         |
            //                          |  ESC  |  SPACE |  LALT  | # |  ENTER  | BSPC  |  DEL  |

            bindings =<
&trans  &kp Q  &kp W    &kp F    &kp P    &kp B      &kp J        &kp L      &kp U         &kp Y       &kp SQT      &trans
&mo 4   &kp A  &kp R    &kp S    &kp T    &kp G      &kp M        &kp N      &kp E         &kp I       &kp O        &mo 4
&trans  &kp Z  &kp X    &kp C    &kp D    &kp V      &kp K        &kp H      &kp DE_COMMA  &kp DE_DOT  &kp DE_FSLH  &trans
                                 &kp ESC  &kp SPACE  &kp TAB      &kp ENTER  &kp BSPC      &kp DEL
            >;
        };

        g_qz {
        // -------------------------------------------------------------------------------------------------------------------
            // |        |   TAB     |   Q   |   W   |      E      |    R   | # |   Z     |   U   |   I   |   O   |   P   |         |
            // | LAYERS |   LCTRL   |   A   |   S   |      D      |    F   | # |   H     |   J   |   K   |   L   |   ;   | LAYERS  |
            // |        |   LSHIFT  |   Y   |   X   |      C      |    V   | # |   N     |   M   |   ,   |   .   |   /   |         |
            //                              |  ESC  |  SPACE/GNUM |  LALT  | # |  ENTER  | BSPC  |  DEL  |

            bindings = <
&trans  &kp TAB     &kp Q    &kp W    &kp E         &kp R          &kp DE_Z   &kp U     &kp I         &kp O       &kp P        &trans
 &mo 4  &kp LCTRL   &kp A    &kp S    &kp D         &kp F          &kp H      &kp J     &kp K         &kp L       &kp SEMI     &mo 4
&trans  &kp LSHIFT  &kp DE_Y &kp X    &kp C         &kp V          &kp N      &kp M     &kp DE_COMMA  &kp DE_DOT  &kp DE_FSLH  &trans
                             &kp ESC  &lt 11 SPACE  &kp LALT       &kp ENTER  &kp BSPC  &kp DEL
            >;
        };

        layers {
            // -------------------------------------------------------------------------------------------------------------
            // |      |     | GAMING_D4      |         |     |     | # |     |     |         |                |     |      |
            // | HELD |     | GAMING_COLEMAK | COLEMAK |     |     | # |     |     | COLEMAK | GAMING_COLEMAK |     | HELD |
            // |      |     | GAMING_QWERTY  | QWERTY  |     |     | # |     |     | QWERTY  | GAMING_QWERTY  |     |      |
            //                               |         |     |     | # |     |     |         |

            bindings = <
&trans  &trans  &to 12  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &to 2   &to 0   &trans  &trans       &trans  &trans  &to 0   &to 2   &trans  &trans
&trans  &trans  &to 3   &to 1   &trans  &trans       &trans  &trans  &to 1   &to 3   &trans  &trans
                        &trans  &trans  &trans       &trans  &trans  &trans
            >;
        };

        navigation {
            // --------------------------------------------------------------------------------------------------
            // |      | PGUP  | HOME  | UP    | END    | INS   | # |     |       |       |      |       |       |
            // |      | PGDN  | LEFT  | DOWN  | RIGHT  | CAPS  | # |     | LSHFT | LCTRL | LALT | LGUI  |       |
            // |      | UNDO  | CUT   | COPY  | PASTE  | REDO  | # |     |       |       | RALT |       |       |
            //                        |  DEL  |  BSPC  | ENTER | # |     | HELD  |       | 

            bindings = <
&trans  &kp PG_UP   &kp HOME   &kp UP      &kp END      &kp INS         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp PG_DN   &kp LEFT   &kp DOWN    &kp RIGHT    &kp CAPSLOCK    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO      &trans  &trans     &trans     &kp RALT  &trans    &trans
                               &kp DEL     &kp BSPC     &kp ENTER       &trans  &trans     &trans
            >;
        };

        // TODO
        // Add mouse keys when implemented in ZMK

        mouse {
            // ------------------------------------------------------------------------------------------------
            // |      |      |      |       |       |      | # |        |       |       |      |       |      |
            // |      |      |      |       |       |      | # |        | LSHFT | LCTRL | LALT | LGUI  |      |
            // |      |      |      |       |       |      | # |        |       |       | RALT |       |      |
            //                      |       |       |      | # |  HELD  |       |       |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans     &trans      &trans   &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans     &trans     &kp RALT  &trans    &trans
                        &trans  &trans  &trans       &trans  &trans     &trans
            >;
        };

        media {
            // ------------------------------------------------------------------------------------------------------------------
            // | BOOTLOAD | OUT_BLE | EP_OFF | BR_D    | BR_U    | EP_ON   | # |     |       |        |      |       | BOOTLOAD |
            // | RESET    | OUT_TOG | PREV   | VOL_D   | VOL_U   | NEXT    | # |     | LSHFT |  LCTRL | LALT | LGUI  | RESET    |
            // |          | OUT_USB | BT_0   | BT_PRV  | BT_NXT  | BT_CLR  | # |     |       |        | RALT |       |          |
            //                               | MUTE    | PLAY    | STOP    | # |     |       |  HELD  |

            bindings = <
&bootloader  &out OUT_BLE  &ext_power EP_OFF  &kp C_BRI_DN  &kp C_BRI_UP  &ext_power EP_ON    &trans  &trans     &trans     &trans    &trans    &bootloader
&sys_reset   &out OUT_TOG  &kp C_PREV         &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT          &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &sys_reset
&trans       &out OUT_USB  &bt BT_SEL 0       &bt BT_PRV    &bt BT_NXT    &bt BT_CLR          &trans  &trans     &trans     &kp RALT  &trans    &trans
                                              &kp C_MUTE    &kp C_PLAY    &kp C_STOP          &trans  &trans     &trans
            >;
        };

        numbers {
            // -------------------------------------------------------------------------------------
            // |     |      |        |       |       |      | # |  [  |  7  |  8  |  9  |  ]  |    |
            // |     | LGUI |  LALT  | LCTRL | LSHFT |      | # |  =  |  4  |  5  |  6  |  '  |    | 
            // |     |      |  RALT  |       |       |      | # |  \  |  1  |  2  |  3  |  `  |    | 
            //                       |       | HELD  |      | # |  -  |  0  |  .  | 

            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans       &kp DE_LBKT   &kp N7  &kp N8  &kp N9  &kp DE_RBKT   &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans       &kp DE_EQUAL  &kp N4  &kp N5  &kp N6  &kp DE_SQT    &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans       &kp DE_BSLH   &kp N1  &kp N2  &kp N3  &kp DE_GRAVE  &trans
                            &trans     &trans     &trans       &kp DE_MINUS  &kp N0  &kp DE_DOT
            >;
        };

        symbols {
            // -------------------------------------------------------------------------------------
            // |     |      |        |       |       |      | # |  {  |  &  |  *  |  (  |  }  |  Ä  | 
            // |     | LGUI |  LALT  | LCTRL | LSHFT |      | # |  +  |  $  |  %  |  ^  |  "  |  Ö  |  
            // |     |      |  RALT  |       |       |      | # |  |  |  !  |  @  |  #  |  ~  |  Ü  | 
            //                       |       |       | HELD | # |  _  |  (  |  )  | 

            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans     &kp DE_LBRC   &kp DE_AMPS  &kp DE_STAR   &kp DE_LPAR   &kp DE_RBRC   &kp DE_AE
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans     &kp DE_PLUS   &kp DE_DLLR  &kp DE_PRCNT  &kp DE_CARET  &kp DE_DQT    &kp DE_OE
&trans  &trans    &kp RALT  &trans     &trans     &trans     &kp DE_PIPE   &kp DE_EXCL  &kp DE_AT     &kp DE_HASH   &kp DE_TILDE  &kp DE_UE
                            &trans     &trans     &trans     &kp DE_UNDER  &kp DE_LPAR  &kp DE_RPAR
            >;
        };

        function {
            // ------------------------------------------------------------------------------------------------
            // |     |      |        |       |       |      | # | PSCRN |  F7   |  F8  |  F9   |  F12  |      |
            // |     | LGUI |  LALT  | LCTRL | LSHFT |      | # | SLCK  |  F4   |  F5  |  F6   |  F11  |      |
            // |     |      |  RALT  |       |       |      | # | PAUSE |  F1   |  F2  |  F3   |  F10  |      |
            //                       | HELD  |       |      | # | TAB   | SPACE |  ESC |

            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans          &kp PSCRN        &kp F7     &kp F8   &kp F9  &kp F12  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans          &kp SLCK         &kp F4     &kp F5   &kp F6  &kp F11  &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans          &kp PAUSE_BREAK  &kp F1     &kp F2   &kp F3  &kp F10  &trans
                            &trans     &trans     &trans          &kp TAB          &kp SPACE  &kp ESC
            >;
        };

        G_NUM {
            // ------------------------------------------------------------------------------------------------------------
            // |      |       |   M   |   L   |   P    |   O    | # |        |        |        |        |        |        |
            // |      |       |   1   |   2   |   3    |   T    | # |        |        |        |        |        |        |
            // |      |       |   4   |   5   |   6    |   B    | # |        |        |        |        |        |        |
            //                        |       |  HELD  |        | # |        |        |        |

            bindings = <
&trans  &trans  &kp M    &kp L   &kp P   &kp O         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N1   &kp N2  &kp N3  &kp T         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4   &kp N5  &kp N6  &kp B         &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans        &trans  &trans  &trans
            >;
        };
        
        G_D_IV {
            // ------------------------------------------------------------------------------------------------------------
            // | G_QZ   | TAB    |       |   A   |   E    |   C   | # |        |        |        |        |        |        |
            // | Layers | LCTRL  |   1   |   2   |   3    |       | # |        |        |        |        |        |        |
            // | QWERTZ | LSHIFT |   Q   |   4   |   5    |       | # |        |        |        |        |        |        |
            //                           | ENTER | SPACE  | ESC   | # |        |        |        |

            bindings = <
&to 3   &kp TAB     &none   &kp A      &kp E      &kp C         &trans  &trans  &trans  &trans  &trans  &trans
&mo 4   &kp LCTRL   &kp N1  &kp N2     &kp N3     &none         &trans  &trans  &trans  &trans  &trans  &trans
&to 1   &kp LSHIFT  &kp Q   &kp N4     &kp N5     &none         &trans  &trans  &trans  &trans  &trans  &trans
                            &kp ENTER  &kp SPACE  &kp ESC       &trans  &trans  &trans
            >;
        };
    };
};

